#!/bin/sh

case ${1} in
   "-h"|"--help")
        echo " TmuxAN (Tmux [A]ttach [N]ew)" 
        echo
        echo " Requirements"
        echo "   tput"
        echo "   tmux"
        echo 
        echo " Usage: tmuxan <session name>"
        echo "   Will attach to an existing session or will"
        echo "   create a new one if the specified session does not exist."
        echo
        echo " Special Uses"
        echo "   'tmuxan ls' - List Existing Sessions"
        echo "   'tmuxan ls --force' -  Create or attach to a session named 'ls'"
        echo "   'tmuxan --help' or 'tmuxan -h' - Print this help message and exit"
        echo 
        exit 0
    ;;
esac

tputBin=$(which tput)
if [ -z "$tputBin" ]; then
    printf "%b\n\n" "Warning: Script prefers 'tput' to be present for full functionality."
    tputBin=":"
fi

if [ ! $(which tmux) ]; then
    $tputBin setaf 1
    $tputBin bold
    printf "%b\n" "Error: Tmux binary is not present in path."
    printf "%b\n" "This script is a wrapper for Tmux, and is useless without it."
    $tputBin sgr0
    exit 1
fi

case ${1} in
    "")
        $tputBin setaf 1
        $tputBin bold
        printf "%b\n" "Error: You must specify a new or existing session name."
        $tputBin sgr0
        running=$(tmux ls 2>/dev/null)
        if [ ! -z "${running}" ]; then
            printf "\nCurrent Running Sessions\n------------------------\n%b\n\n" "${running}"
        fi
        exit 1
    ;;
    "ls")
        if [ ! "${2}" = "--force" ]; then
            tmux ls
            exit 0
        fi
    ;;
esac

#tmux a -t "${1}" 2>/dev/null || tmux new -s "${1}"

# The above line shouldn't be needed since the -A switch to
# new-session functions exactly like I was replicating with
# the above command.
#
# The version I have below this line should be functionally
# identical.

tmux new-session -A -s "${1}"

