#!/bin/sh
wfcshowhelp() {
    printf '%s\n%s\n%s\n%s\n%s\n%s\n' \
        'Toggles the state of the wifi radio.' \
        ' --on,  --enable         turn wifi state to on' \
        ' --off, --disable        turn wifi state to off' \
        ' --toggle                toggle current state' \
        ' --cycle                 turn wifi OFF, wait 2 sec, then back on' \
        ' --status                show the current status and exit'
}

wfcascii=$(cat << 'EOF'

        oooooo   oooooo     oooo o8o  oooooooooooo o8o  
         `888.    `888.     .8'  `"'  `888'     `8 `"'  
          `888.   .8888.   .8'   ooo   888         ooo  
           `888  .8'`888. .8'    888   888oooo8    888  
            `888.8'  `888.8'     888   888    "    888  
             `888'    `888'      888   888         888  
              `8'      `8'      o888o o888o       o888o 
                                                  
  .oooooo.                             .                      oooo  
 d8P'  `Y8b                          .o8                      `888  
888           .ooooo.  ooo. .oo.   .o888oo oooo d8b  .ooooo.   888  
888          d88' `88b `888P"Y88b    888   `888""8P d88' `88b  888  
888          888   888  888   888    888    888     888   888  888  
`88b    ooo  888   888  888   888    888 .  888     888   888  888  
 `Y8bood8P'  `Y8bod8P' o888o o888o   "888" d888b    `Y8bod8P' o888o 
EOF
)

wfcascii() {
    printf '%s' "${wfcascii}"
}

wfcexec() {
    if [ "${radioState}" = "enabled" ]; then
        if [ ! "${1}" = "silent" ]; then
            printf 'Was: Enabled\nTurning Off\n'
        fi
        nmcli radio wifi off && radioState="disabled"
    elif [ "${radioState}" = "disabled" ]; then
        if [ ! "${1}" = "silent" ]; then
            printf 'Was: Disabled\nTurning On\n'
        fi
        nmcli radio wifi on && radioState="enabled"
    fi
}

if ! command -v nmcli 1>/dev/null 2>&1; then
    printf '%s\n' 'Requirement: "nmcli" not found in path.'
else
    radioState="$(nmcli radio wifi)"
fi

if [ -z "${1}" ]; then
    wfcascii
    printf '\n\nPlease Run with the --help switch for usage information\n\n'
    exit 0
fi

case "${1}" in
    '--help'|'-h')
        wfcshowhelp
        exit 0
    ;;
    '--on'|'--enable')
        printf 'Setting Wifi State Unconditionally To: On\n'
        nmcli radio wifi on
    ;;
    '--off'|'--disable')
        printf 'Setting Wifi State Unconditionally To: Off\n'
        nmcli radio wifi off
    ;;
    '--status')
        shift
        if [ "${1}" = "--short" ]; then
            nmcli radio wifi | awk '{printf("%s%s\n",toupper(substr($1,1,1)),substr($1,2))}'
        else
            nmcli radio wifi | awk '{printf("%s: %s%s\n","Wifi Radio Is",toupper(substr($1,1,1)),substr($1,2))}'
        fi
        exit 0
    ;;
    '--toggle')
        wfcexec
        exit 0
    ;;
    '--cycle')
        if [ "${radioState}" = "enabled" ]; then
            printf 'Setting Wifi State To Off\n'
            wfcexec silent
            sleep 2
            printf 'Setting Wifi State To On\n'
            wfcexec silent
            sleep 2
            printf 'Wifi Cycling Complete\n'
        else
            printf 'This switch is only supported when wifi is enabled.\n'
            exit 1
        fi
        exit 0  
    ;;
    *)
        printf '%s\n\n' 'Invalid Action Specified.  Please refer to help below'
        wfcshowhelp
    ;;
esac

